!function(e){function n(n){for(var r,c,i=n[0],s=n[1],u=n[2],f=0,m=[];f<i.length;f++)c=i[f],Object.prototype.hasOwnProperty.call(a,c)&&a[c]&&m.push(a[c][0]),a[c]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(l&&l(n);m.length;)m.shift()();return o.push.apply(o,u||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,i=1;i<t.length;i++){var s=t[i];0!==a[s]&&(r=!1)}r&&(o.splice(n--,1),e=c(c.s=t[0]))}return e}var r={},a={0:0},o=[];function c(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=e,c.c=r,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)c.d(t,r,function(n){return e[n]}.bind(null,r));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="/";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=n,i=i.slice();for(var u=0;u<i.length;u++)n(i[u]);var l=s;o.push([698,1]),t()}({445:function(e,n){},447:function(e,n){},479:function(e,n){},480:function(e,n){},522:function(e,n,t){var r={"./af":191,"./af.js":191,"./ar":192,"./ar-dz":193,"./ar-dz.js":193,"./ar-kw":194,"./ar-kw.js":194,"./ar-ly":195,"./ar-ly.js":195,"./ar-ma":196,"./ar-ma.js":196,"./ar-sa":197,"./ar-sa.js":197,"./ar-tn":198,"./ar-tn.js":198,"./ar.js":192,"./az":199,"./az.js":199,"./be":200,"./be.js":200,"./bg":201,"./bg.js":201,"./bm":202,"./bm.js":202,"./bn":203,"./bn.js":203,"./bo":204,"./bo.js":204,"./br":205,"./br.js":205,"./bs":206,"./bs.js":206,"./ca":207,"./ca.js":207,"./cs":208,"./cs.js":208,"./cv":209,"./cv.js":209,"./cy":210,"./cy.js":210,"./da":211,"./da.js":211,"./de":212,"./de-at":213,"./de-at.js":213,"./de-ch":214,"./de-ch.js":214,"./de.js":212,"./dv":215,"./dv.js":215,"./el":216,"./el.js":216,"./en-SG":217,"./en-SG.js":217,"./en-au":218,"./en-au.js":218,"./en-ca":219,"./en-ca.js":219,"./en-gb":220,"./en-gb.js":220,"./en-ie":221,"./en-ie.js":221,"./en-il":222,"./en-il.js":222,"./en-nz":223,"./en-nz.js":223,"./eo":224,"./eo.js":224,"./es":225,"./es-do":226,"./es-do.js":226,"./es-us":227,"./es-us.js":227,"./es.js":225,"./et":228,"./et.js":228,"./eu":229,"./eu.js":229,"./fa":230,"./fa.js":230,"./fi":231,"./fi.js":231,"./fo":232,"./fo.js":232,"./fr":233,"./fr-ca":234,"./fr-ca.js":234,"./fr-ch":235,"./fr-ch.js":235,"./fr.js":233,"./fy":236,"./fy.js":236,"./ga":237,"./ga.js":237,"./gd":238,"./gd.js":238,"./gl":239,"./gl.js":239,"./gom-latn":240,"./gom-latn.js":240,"./gu":241,"./gu.js":241,"./he":242,"./he.js":242,"./hi":243,"./hi.js":243,"./hr":244,"./hr.js":244,"./hu":245,"./hu.js":245,"./hy-am":246,"./hy-am.js":246,"./id":247,"./id.js":247,"./is":248,"./is.js":248,"./it":249,"./it-ch":250,"./it-ch.js":250,"./it.js":249,"./ja":251,"./ja.js":251,"./jv":252,"./jv.js":252,"./ka":253,"./ka.js":253,"./kk":254,"./kk.js":254,"./km":255,"./km.js":255,"./kn":256,"./kn.js":256,"./ko":257,"./ko.js":257,"./ku":258,"./ku.js":258,"./ky":259,"./ky.js":259,"./lb":260,"./lb.js":260,"./lo":261,"./lo.js":261,"./lt":262,"./lt.js":262,"./lv":263,"./lv.js":263,"./me":264,"./me.js":264,"./mi":265,"./mi.js":265,"./mk":266,"./mk.js":266,"./ml":267,"./ml.js":267,"./mn":268,"./mn.js":268,"./mr":269,"./mr.js":269,"./ms":270,"./ms-my":271,"./ms-my.js":271,"./ms.js":270,"./mt":272,"./mt.js":272,"./my":273,"./my.js":273,"./nb":274,"./nb.js":274,"./ne":275,"./ne.js":275,"./nl":276,"./nl-be":277,"./nl-be.js":277,"./nl.js":276,"./nn":278,"./nn.js":278,"./pa-in":279,"./pa-in.js":279,"./pl":280,"./pl.js":280,"./pt":281,"./pt-br":282,"./pt-br.js":282,"./pt.js":281,"./ro":283,"./ro.js":283,"./ru":284,"./ru.js":284,"./sd":285,"./sd.js":285,"./se":286,"./se.js":286,"./si":287,"./si.js":287,"./sk":288,"./sk.js":288,"./sl":289,"./sl.js":289,"./sq":290,"./sq.js":290,"./sr":291,"./sr-cyrl":292,"./sr-cyrl.js":292,"./sr.js":291,"./ss":293,"./ss.js":293,"./sv":294,"./sv.js":294,"./sw":295,"./sw.js":295,"./ta":296,"./ta.js":296,"./te":297,"./te.js":297,"./tet":298,"./tet.js":298,"./tg":299,"./tg.js":299,"./th":300,"./th.js":300,"./tl-ph":301,"./tl-ph.js":301,"./tlh":302,"./tlh.js":302,"./tr":303,"./tr.js":303,"./tzl":304,"./tzl.js":304,"./tzm":305,"./tzm-latn":306,"./tzm-latn.js":306,"./tzm.js":305,"./ug-cn":307,"./ug-cn.js":307,"./uk":308,"./uk.js":308,"./ur":309,"./ur.js":309,"./uz":310,"./uz-latn":311,"./uz-latn.js":311,"./uz.js":310,"./vi":312,"./vi.js":312,"./x-pseudo":313,"./x-pseudo.js":313,"./yo":314,"./yo.js":314,"./zh-cn":315,"./zh-cn.js":315,"./zh-hk":316,"./zh-hk.js":316,"./zh-tw":317,"./zh-tw.js":317};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=522},698:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),o=t(90),c=t(377),i=t(378),s=t(0),u=t.n(s),l=t(91),f=t(40),m=function(e){var n=e.children;return a.a.createElement(l.a,null,n)};m.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node])};var p=m,d=t(35),v=function(e){return function(n){return n.theme[e]}},g=d.c,j=t(32),h=t.n(j),b=t(3),y=t.n(b);function O(){var e=y()(["\n    font-weight: 600;\n  "]);return O=function(){return e},e}function E(){var e=y()(["\n    font-weight: 500;\n  "]);return E=function(){return e},e}function w(){var e=y()(["\n    font-weight: 400;\n  "]);return w=function(){return e},e}function k(){var e=y()(["\n    font-size: 1.2rem;\n    line-height: 1.6rem;\n  "]);return k=function(){return e},e}function x(){var e=y()(["\n    font-size: 1.4rem;\n    line-height: 2.4rem;\n  "]);return x=function(){return e},e}function N(){var e=y()(["\n    font-size: 1.6rem;\n    line-height: 2.6rem;\n  "]);return N=function(){return e},e}function P(){var e=y()(["\n    font-size: 4rem;\n    line-height: 4.4rem;\n  "]);return P=function(){return e},e}function S(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}var T=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?S(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):S(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},{"--color-alert":"#ff0000","--color-light":"#ffffff","--color-main":"#000000","--color-primary":"#1f2d3d","--color-secondary":"#76c720"},{},{"--font-xlarge":Object(d.b)(P()),"--font-large":Object(d.b)(N()),"--font-medium":Object(d.b)(x()),"--font-small":Object(d.b)(k()),"--font-weight-book":Object(d.b)(w()),"--font-weight-medium":Object(d.b)(E()),"--font-weight-demi":Object(d.b)(O())}),z=function(e){var n=e.children;return a.a.createElement(d.a,{theme:T},n)};z.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node])};var D=z,C=t(13),R=t.n(C),B=t(14),L=t.n(B),F=t(366),_=t.n(F),M=t(24),I=t.n(M),A=t(367),U=t.n(A);function K(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Y(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?K(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):K(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var q="https://daily-co-metrics.herokuapp.com/api/v1.0";function G(e){return H.apply(this,arguments)}function H(){return(H=I()(L.a.mark((function e(n){var t,r,a,o,c,i,s=arguments;return L.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=s.length>1&&void 0!==s[1]?s[1]:"get",r=s.length>2?s[2]:void 0,a=s.length>3&&void 0!==s[3]?s[3]:{},o=["delete","patch","post","put"].includes(t.toLowerCase()),e.prev=4,e.next=7,U()(Y((i={},h()(i,o?"data":"params",r),h()(i,"baseURL",q),h()(i,"method",t),h()(i,"url",n),i),a));case 7:c=e.sent,e.next=15;break;case 10:if(e.prev=10,e.t0=e.catch(4),e.t0.response){e.next=14;break}throw new Error("NETWORK");case 14:c=e.t0.response;case 15:return e.abrupt("return",c);case 16:case"end":return e.stop()}}),e,null,[[4,10]])})))).apply(this,arguments)}["get","patch","post","put"].forEach((function(e){G[e]=function(n,t,r){return G(n,e,t,r)}}));var J=G,W="MALFORMED_CONTENT",Z="NOT_FOUND",$="UNAUTHORIZED",Q="UNKNOWN";function V(e){return{create:"post",delete:"delete",read:"get",update:"put"}[e]||e}function X(e,n,t){return ee.apply(this,arguments)}function ee(){return(ee=I()(L.a.mark((function e(n,t,r){var a,o,c,i,s=arguments;return L.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=s.length>3&&void 0!==s[3]?s[3]:{},e.next=3,J(n,V(t),r,a);case 3:if(o=e.sent,c=o.data,400!==(i=o.status)){e.next=8;break}throw new Error(c.error&&c.error.message||c.message||W);case 8:if(401!==i){e.next=10;break}throw new Error($);case 10:if(404!==i){e.next=12;break}throw new Error(Z);case 12:if(!(i<200||i>=300)||304===i){e.next=14;break}throw new Error(Q);case 14:if("object"!==_()(c)||!("error"in c)){e.next=16;break}throw new Error(c.error||c.message);case 16:return e.abrupt("return",c);case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}Object.values({create:"create",delete:"delete",read:"read",update:"update"}).forEach((function(e){X[e]=function(n,t,r){return X(n,e,t,r)}}));var ne=X;var te={createToken:function(e){return ne.create("/meetings",e)},validateToken:function(e){return ne.read("/meetings/".concat(e))}},re=t(701),ae=t(368),oe=t.n(ae);var ce=function(e){var n=Object(r.useRef)();return oe()(e,n.current)||(n.current=e),n.current};var ie=function(e,n){return Object(r.useEffect)(e,ce(n))};function se(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function ue(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?se(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):se(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var le=1,fe=2,me=4;function pe(e,n){switch(n.type){case le:return ue({},e,{data:void 0,error:void 0,loading:!0,promise:void 0});case fe:return ue({},e,{error:void 0,loading:!0,promise:n.promise});case me:return ue({},e,{data:n.data,error:n.error,loading:!1,promise:void 0});default:return e}}var de=pe({},{type:le}),ve=function(e,n){var t=Object(r.useReducer)(pe,de),a=R()(t,2),o=a[0],c=a[1],i=Object(r.useState)((function(){return Object(re.a)()})),s=R()(i,2),u=s[0],l=s[1],f=Object(r.useCallback)((function(){l(Object(re.a)())}),[l]);return ie((function(){var t=!0,r={};return I()(L.a.mark((function a(){var o;return L.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,r=e(n),c({promise:r,type:fe}),a.next=5,r;case 5:o=a.sent,t&&c({data:o,type:me}),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(0),t&&c({error:a.t0,type:me});case 12:case"end":return a.stop()}}),a,null,[[0,9]])})))(),function(){t=!1}}),[u,n,e]),[o,f]},ge=function(){var e=new URLSearchParams(Object(f.g)().search).get("token"),n=ve(te.validateToken,e),t=R()(n,1)[0],r=t.data,a=(r=void 0===r?{}:r).valid;return!(!t.loading&&!a)&&e};var je=function(){var e=ve.apply(void 0,arguments),n=R()(e,1),t=n[0];return t.data};function he(){var e=y()(["\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n"]);return he=function(){return e},e}var be=function(e){var n=e.className;return a.a.createElement("aside",{className:n},a.a.createElement("img",{alt:"loader",src:"http://help.presentations2go.eu/LTI/lib/Spinner.gif"}))};be.propTypes={className:u.a.string};var ye=g(be)(he()),Oe=t(18),Ee=t.n(Oe),we=t(19),ke=t.n(we),xe=t(369).a;function Ne(){var e=y()(["\n  border: 0;\n  height: 100%;\n  width: 100%;\n"]);return Ne=function(){return e},e}var Pe=function(e){var n=e.className,t=e.onLoad,o=void 0===t?function(){}:t,c=e.url,i=Object(r.useRef)();return Object(r.useEffect)((function(){var e=xe.wrap(i.current,{});e.join({url:c}),o(e)}),[i,c,o]),a.a.createElement("iframe",{ref:i,allow:"microphone; camera; autoplay",className:n,title:"live video"})};Pe.propTypes={className:u.a.string,onLoad:u.a.func,url:u.a.string};var Se=g(Pe)(Ne());var Te={get:function(e){return ne.read("/stats/".concat(e))},send:function(e,n,t){return ne.create("/stats/".concat(e,"/").concat(n),t)}},ze=function(e){var n=e.id,t=ke()(e,["id"]),o=Object(r.useState)(),c=R()(o,2),i=c[0],s=c[1],u=Object(r.useRef)(),l=Object(r.useCallback)((function(e){s(e)}),[s]);return ie((function(){var e;return i&&i.on("joined-meeting",(function(e){var n=e.participants;if(!u.current){var t=Object.keys(n);u.current=t[t.length-1]}})).on("network-connection",(function(t){t.session_id&&(e=setInterval(I()(L.a.mark((function e(){var t,r,a;return L.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.getNetworkStats();case 2:t=e.sent,r=t.stats,a=(r=void 0===r?{}:r).latest,Te.send(n,u.current,a);case 7:case"end":return e.stop()}}),e)}))),15e3))})).on("participant-left",(function(n){n.participant.session_id===u.current&&clearInterval(e)})),function(){return clearInterval(e)}}),[n,i,u]),a.a.createElement(Se,Ee()({},t,{onLoad:l}))};ze.propTypes={id:u.a.string};var De=ze;function Ce(){var e=y()(["\n  ",";\n"]);return Ce=function(){return e},e}var Re=function(e){var n=e.className;return a.a.createElement("span",{className:n},"You are not authorized to take this call")};Re.propTypes={className:u.a.string};var Be=g(Re)(Ce(),v("--font-xlarge"));var Le={create:function(e){return ne.create("/rooms",e)},get:function(){return ne.read("/rooms")},getById:function(e){return ne.read("/rooms/".concat(e))},getToken:function(){return ne.read("/rooms")}};function Fe(){var e=y()(["\n  height: 100vh;\n"]);return Fe=function(){return e},e}var _e=function(e){var n=e.className,t=e.match.params.id,r=je(Le.getById,t),o=ge();if(!r)return a.a.createElement(ye,null);var c=r.url,i=r.privacy;return o||"private"!==i?a.a.createElement(De,{className:n,id:t,url:o?c:"".concat(c,"?t=").concat(o)}):a.a.createElement(Be,null)};_e.propTypes={className:u.a.string,match:u.a.shape({params:u.a.shape({id:u.a.string})})};var Me=g(_e)(Fe());function Ie(){var e=y()(["\n  ","\n  ","\n  background-color: ",";\n  border-radius: 1.6rem;\n  color: ",";\n  min-width: 6rem;\n  padding: 0.8rem 1.2rem;\n  text-transform: capitalize;\n\n  &:active {\n    color: ",";\n    background-color: ",";\n  }\n\n  &[disabled] {\n    color: ",";\n    background-color: ",";\n  }\n"]);return Ie=function(){return e},e}var Ae=g("button")(Ie(),v("--font-small"),v("--font-weight-demi"),v("--color-secondary"),v("--color-light"),v("--color-light"),v("--color-primary"),v("--color-light"),v("--color-primary"));function Ue(){var e=y()(["\n  ","\n  ","\n  color: ",";\n  text-decoration: none;\n"]);return Ue=function(){return e},e}var Ke=g(l.b)(Ue(),v("--font-small"),v("--font-weight-demi"),v("--color-seconday"));function Ye(){var e=y()([""]);return Ye=function(){return e},e}var qe=function(e){var n=e.className,t=e.children,r=e.fields,o=e.to,c=ke()(e,["className","children","fields","to"]),i=je(te.createToken,r);return a.a.createElement(Ke,Ee()({},c,{className:n,to:"".concat(o,"?token=").concat(i)}),t)};qe.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]),className:u.a.string,fields:u.a.object,to:u.a.string};var Ge=g(qe)(Ye());function He(){var e=y()(["\n  box-shadow: 0 0.1rem 0.3rem 0 rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  display: grid;\n  padding: 1.6rem 3.2rem;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 1.6rem 0.8rem;\n\n  "," {\n    grid-row: 1;\n    grid-column: 1 / span 3;\n    ",";\n  }\n\n  "," {\n    ",";\n    grid-row: 1;\n    grid-column: 4 / span 3;\n  }\n\n  "," {\n    ",";\n    background: ",";\n    border-radius: 1.6rem;\n    color: ",";\n    grid-row: 2;\n    grid-column: 1;\n    max-width: 8rem;\n    text-align: center;\n    text-transform: capitalize;\n\n    &[data-private='true'] {\n      background: ",";\n    }\n  }\n\n  "," {\n    ",";\n    grid-row: 3;\n    text-transform: capitalize;\n  }\n"]);return He=function(){return e},e}function Je(){var e=y()([""]);return Je=function(){return e},e}function We(){var e=y()([""]);return We=function(){return e},e}function Ze(){var e=y()([""]);return Ze=function(){return e},e}var $e=g("span")(Ze()),Qe=g("span")(We()),Ve=g("span")(Je()),Xe=function(e){var n=e.className,t=e.created_at,r=e.id,o=e.name,c=e.noStats,i=e.privacy;return a.a.createElement("div",{className:n},a.a.createElement(Qe,null,o),a.a.createElement($e,null,"Created at: ",new window.Date(t).toDateString()),a.a.createElement(Ve,{"data-private":"private"===i},i),!c&&a.a.createElement(Ke,{to:"/rooms/".concat(r,"/stats")},"go to stats"),"public"===i?a.a.createElement(Ke,{target:"blank",to:"/live/".concat(r)},"go to call"):a.a.createElement(Ge,{fields:{name:o},target:"blank",to:"/live/".concat(r)},"go to call"))};Xe.propTypes={className:u.a.string,created_at:u.a.string,id:u.a.string,name:u.a.string,noStats:u.a.bool,privacy:u.a.string};var en=g(Xe)(He(),Qe,v("--font-large"),$e,v("--font-medium"),Ve,v("--font-medium"),v("--color-secondary"),v("--color-light"),v("--color-alert"),Ke,v("--font-medium"));function nn(){var e=y()([""]);return nn=function(){return e},e}var tn=function(e){var n=e.className,t=e.data,r=void 0===t?[]:t,o=e.template;return a.a.createElement("div",{className:n},r.map((function(e){return a.a.createElement(o,Ee()({key:e.id},e))})))};tn.propTypes={className:u.a.string,data:u.a.arrayOf(u.a.object),template:u.a.node};var rn=g(tn)(nn()),an=t(54),on=t.n(an);function cn(){var e=y()(["\n  ","\n  display: flex;\n\n  "," {\n    margin-right: 0.8rem;\n    text-transform: capitalize;\n  }\n\n  "," {\n    border-radius: 0.4rem;\n    padding: 0.4rem 0.8rem;\n    text-transform: capitalize;\n  }\n"]);return cn=function(){return e},e}function sn(){var e=y()([""]);return sn=function(){return e},e}function un(){var e=y()([""]);return un=function(){return e},e}var ln=g("label")(un()),fn=g("select")(sn()),mn=function(e){var n=e.className,t=e.options,o=void 0===t?[]:t,c=ke()(e,["className","options"]),i=Object(an.useField)(c),s=i.id,u=void 0===s?Object(re.a)():s,l=i.label,f=i.name,m=i.onBlur,p=void 0===m?function(){}:m,d=i.onChange,v=void 0===d?function(){}:d,g=i.onFocus,j=void 0===g?function(){}:g,h=i.value,b=ke()(i,["id","label","name","onBlur","onChange","onFocus","value"]);return Object(r.useEffect)((function(){if(void 0===h){var e=o[0]||"";v(e)}}),[v,o,h]),a.a.createElement("div",{className:n},a.a.createElement(ln,{htmlFor:u},l),a.a.createElement(fn,Ee()({},b,{name:f,onBlur:function(){p()},onChange:function(e){var n=e.target.value;e.stopPropagation();var t=o.find((function(e){return e===n}))||o[0];v(t)},onFocus:function(){j()}}),o.map((function(e){return a.a.createElement("option",{value:e},e)}))))};mn.propTypes={className:u.a.string,id:u.a.string,label:u.a.string,options:u.a.arrayOf(u.a.string)};var pn=g(mn)(cn(),v("--font-medium"),ln,fn);function dn(){var e=y()(["\n  ","\n  height: 5.2rem;\n\n  "," {\n    display: flex;\n  }\n\n  "," {\n    margin-right: 0.8rem;\n    text-transform: capitalize;\n  }\n\n  "," {\n    border-radius: 0.4rem;\n    padding: 0.4rem 0.8rem;\n  }\n\n  "," {\n    color: red;\n  }\n"]);return dn=function(){return e},e}function vn(){var e=y()([""]);return vn=function(){return e},e}function gn(){var e=y()([""]);return gn=function(){return e},e}function jn(){var e=y()([""]);return jn=function(){return e},e}function hn(){var e=y()([""]);return hn=function(){return e},e}var bn=g("label")(hn()),yn=g("input")(jn()),On=g("span")(gn()),En=g("div")(vn()),wn=function(e){var n=e.className,t=ke()(e,["className"]),r=Object(an.useField)(t),o=r.error,c=r.id,i=void 0===c?Object(re.a)():c,s=r.label,u=r.name,l=r.onBlur,f=void 0===l?function(){}:l,m=r.onChange,p=void 0===m?function(){}:m,d=r.onFocus,v=void 0===d?function(){}:d,g=ke()(r,["error","id","label","name","onBlur","onChange","onFocus"]);return a.a.createElement("div",{className:n},a.a.createElement(En,null,a.a.createElement(bn,{htmlFor:i},s),a.a.createElement(yn,Ee()({},g,{name:u,onBlur:function(){f()},onChange:function(e){var n=e.target.value;e.stopPropagation(),p(n)},onFocus:function(){v()}}))),o&&a.a.createElement(On,null,o))};function kn(){var e=y()([""]);return kn=function(){return e},e}wn.propTypes={className:u.a.string,id:u.a.string,label:u.a.string};var xn={select:pn,text:g(wn)(dn(),v("--font-medium"),En,bn,yn,On)},Nn=function(e){var n=e.type,t=void 0===n?"text":n,r=ke()(e,["type"]),o=xn[t];return a.a.createElement(o,r)};Nn.propTypes={type:u.a.string};var Pn=g(Nn)(kn());function Sn(){var e=y()([""]);return Sn=function(){return e},e}var Tn=g(on.a)(Sn());function zn(){var e=y()(["\n  "," {\n    margin: 3.2rem 0;\n\n    "," {\n      margin: 1.2rem 0;\n    }\n  }\n"]);return zn=function(){return e},e}function Dn(){var e=y()([""]);return Dn=function(){return e},e}function Cn(){var e=y()([""]);return Cn=function(){return e},e}var Rn=g("div")(Cn()),Bn=g("h2")(Dn()),Ln="https://daily-co-metrics.herokuapp.com",Fn=function(e){var n=e.className,t=e.onSubmit,o=void 0===t?function(){}:t,c=Object(r.useMemo)((function(){return{name:{format:{message:"Spaces are not allowed",pattern:/^\S*$/}}}}),[]),i=function(){var e=I()(L.a.mark((function e(n){var t,r,a;return L.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Le.create(n);case 2:if(t=e.sent,r=t.id,"private"!==t.privacy){e.next=12;break}return e.next=8,te.createToken(n);case 8:a=e.sent,o("".concat(Ln,"/live/").concat(r,"?token=").concat(a)),e.next=13;break;case 12:o("".concat(Ln,"/live/").concat(r));case 13:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return a.a.createElement(Tn,{className:n,constraint:c,onSubmit:i},a.a.createElement(Bn,null,"Create a room"),a.a.createElement(Rn,null,a.a.createElement(Pn,{label:"room name",name:"name"}),a.a.createElement(Pn,{label:"privacy",name:"privacy",options:["public","private"],type:"select"})),a.a.createElement(Ae,{type:"submit"},"create"))};Fn.propTypes={className:u.a.string,onSubmit:u.a.func};var _n=g(Fn)(zn(),Rn,Pn);function Mn(){var e=y()(["\n  display: flex;\n  justify-content: center;\n  padding: 1.6rem;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n\n  "," {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n  }\n\n  ",", "," {\n    background: white;\n    border-radius: 0.5rem;\n    margin: 18vh auto 0;\n    padding: 1.6rem;\n    position: relative;\n    z-index: 1;\n  }\n\n  "," {\n    height: 23rem;\n    width: 35rem;\n  }\n\n  "," {\n    height: 10rem;\n    width: 40rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    "," {\n      display: inline-block;\n      ","\n      width: 28rem;\n    }\n  }\n"]);return Mn=function(){return e},e}function In(){var e=y()([""]);return In=function(){return e},e}function An(){var e=y()([""]);return An=function(){return e},e}function Un(){var e=y()([""]);return Un=function(){return e},e}var Kn=g("input")(Un()),Yn=g("aside")(An()),qn=g("div")(In()),Gn=function(e){var n=e.className,t=e.onRefetch,o=Object(r.useRef)(),c=Object(r.useState)(),i=R()(c,2),s=i[0],u=i[1],l=Object(r.useState)(!1),m=R()(l,2),p=m[0],d=m[1],v=Object(r.useCallback)((function(e){t(),u(e)}),[t]),g=function(){var e=I()(L.a.mark((function e(){return L.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o.current.select(),document.execCommand("copy");case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return a.a.createElement("div",{className:n},p&&a.a.createElement(f.a,{to:"/rooms"}),a.a.createElement(Yn,{onClick:function(){d(!0)}}),s?a.a.createElement(qn,null,a.a.createElement(Kn,{ref:o,label:"room url",value:s}),a.a.createElement(Ae,{onClick:g},"copy")):a.a.createElement(_n,{onSubmit:v}))};Gn.propTypes={className:u.a.string,onRefetch:u.a.func};var Hn=g(Gn)(Mn(),Yn,_n,qn,_n,qn,Kn,v("--font-large"));function Jn(){var e=y()(["\n  padding: 3.2rem;\n\n  "," {\n    text-align: right;\n    position: fixed;\n    right: 3.2rem;\n    top: 8.4rem;\n  }\n\n  "," {\n    margin-top: 1.6rem;\n\n    "," {\n      margin-bottom: 2.4rem;\n    }\n  }\n"]);return Jn=function(){return e},e}function Wn(){var e=y()([""]);return Wn=function(){return e},e}var Zn=g("aside")(Wn()),$n=function(e){var n=e.className,t=e.match.url,r=ve(Le.get),o=R()(r,2),c=o[0],i=c.data,s=void 0===i?[]:i,u=c.loading,l=o[1];return a.a.createElement("div",{className:n},a.a.createElement(f.b,{path:"".concat(t,"/create"),render:function(e){return a.a.createElement(Hn,Ee()({},e,{onRefetch:l}))}}),a.a.createElement(Zn,null,a.a.createElement(Ae,{as:Ke,to:"".concat(t,"/create")},"Create room")),u?a.a.createElement(ye,null):a.a.createElement(rn,{data:s,template:en}))};$n.propTypes={className:u.a.string,match:u.a.shape({url:u.a.string})};var Qn=g(Object(f.h)($n))(Jn(),Zn,rn,en),Vn=t(2),Xn=t.n(Vn),et=t(42);function nt(){var e=y()(["\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  "," {\n    margin-bottom: 2.4rem;\n  }\n"]);return nt=function(){return e},e}function tt(){var e=y()([""]);return tt=function(){return e},e}var rt=g("h3")(tt()),at=function(e){return Xn()(e).format("MMM Do YY hh:mm:ss")},ot=["red","green"],ct=function(e){var n=e.className,t=e.data,r=e.height,o=void 0===r?300:r,c=e.width,i=void 0===c?600:c,s=e.title,u=e.yAxis,l=t[0]||{},f=(l.time,ke()(l,["time"])),m=Object.keys(f);return a.a.createElement("div",{className:n},a.a.createElement(rt,null,s),a.a.createElement(et.e,{data:t,height:o,width:i},m.map((function(e,n){return a.a.createElement(et.d,{key:e,dataKey:e,stroke:ot[n],type:"monotone"})})),a.a.createElement(et.a,{stroke:"#ccc"}),a.a.createElement(et.f,{dataKey:"time",tickFormatter:at}),a.a.createElement(et.g,null,a.a.createElement(et.b,{angle:-90,position:"insideLeft",style:{textAnchor:"middle"},value:u})),a.a.createElement(et.c,{height:36,verticalAlign:"bottom"})))};ct.propTypes={className:u.a.string,data:u.a.arrayOf(u.a.object),height:u.a.number,title:u.a.string,width:u.a.number,yAxis:u.a.string};var it=g(ct)(nt(),rt);function st(){var e=y()(["\n  "," {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n"]);return st=function(){return e},e}function ut(){var e=y()([""]);return ut=function(){return e},e}function lt(){var e=y()([""]);return lt=function(){return e},e}var ft=g("div")(lt()),mt=g("h3")(ut()),pt=function(e){var n=e.className,t=e.bitsPerSecond,r=e.id,o=e.lostPackets;return a.a.createElement("div",{className:n},a.a.createElement(mt,null,"Paticipant id: ",r),a.a.createElement(ft,null,a.a.createElement(it,{data:t,title:"Bits per second",yAxis:"bits per second"}),a.a.createElement(it,{data:o,title:"Lost packets",yAxis:"packets lost"})))};pt.propTypes={bitsPerSecond:u.a.arrayOf(u.a.object),className:u.a.string,id:u.a.string,lostPackets:u.a.arrayOf(u.a.object)};var dt=g(pt)(st(),ft);function vt(){var e=y()([""]);return vt=function(){return e},e}var gt=function(e){var n=e.className,t=e.id,r=ve(Te.get,t),o=R()(r,1)[0],c=o.data;return o.loading?a.a.createElement(ye,null):a.a.createElement("div",{className:n},Object.keys(c).map((function(e){var n=c[e].map((function(e){return{time:e.time,videoRecvBitsPerSecond:e.videoRecvBitsPerSecond,videoSendBitsPerSecond:e.videoSendBitsPerSecond}})),t=c[e].map((function(e){return{time:e.time,videoRecvPacketLoss:e.videoRecvPacketLoss,videoSendPacketLoss:e.videoSendPacketLoss}}));return a.a.createElement(dt,{key:e,bitsPerSecond:n,id:e,lostPackets:t})})))};gt.propTypes={className:u.a.string,id:u.a.string};var jt=g(gt)(vt());function ht(){var e=y()(["\n  height: 100%;\n  padding: 3.2rem;\n\n  "," {\n    margin-bottom: 6.4rem;\n  }\n"]);return ht=function(){return e},e}var bt=function(e){var n=e.className,t=e.match.params.id,r=ve(Le.getById,t),o=R()(r,1)[0],c=o.data;return o.loading?a.a.createElement(ye,null):a.a.createElement("div",{className:n},a.a.createElement(en,Ee()({},c,{noStats:!0})),a.a.createElement(jt,{id:t}))};bt.propTypes={className:u.a.string,match:u.a.shape({params:u.a.shape({id:u.a.string})})};var yt=g(bt)(ht(),en);function Ot(){var e=y()(["\n  ",";\n  align-items: center;\n  background: ",";\n  color: ",";\n  display: flex;\n  height: 6.4rem;\n  padding: 0 3.2rem;\n\n  "," {\n    ",";\n    color: ",";\n  }\n"]);return Ot=function(){return e},e}function Et(){var e=y()([""]);return Et=function(){return e},e}var wt=g("h1")(Et()),kt=function(e){var n=e.className;return a.a.createElement("header",{className:n},a.a.createElement(wt,{as:Ke,to:"/"},"Daily.js"))};kt.propTypes={className:u.a.string};var xt=g(kt)(Ot(),v("--font-large"),v("--color-primary"),v("--color-light"),wt,v("--font-xlarge"),v("--color-light"));function Nt(){var e=y()(["\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n\n  "," {\n    grid-row: 1;\n    grid-column: 1 / span 12;\n    position: fixed;\n    width: 100%;\n    z-index: 2;\n  }\n\n  "," {\n    grid-row: 2;\n    grid-column: 1 / span 12;\n    margin-top: 5.6rem;\n    z-index: 1;\n  }\n"]);return Nt=function(){return e},e}function Pt(){var e=y()([""]);return Pt=function(){return e},e}var St=g("main")(Pt()),Tt=function(e){var n=e.className,t=e.match.url;return a.a.createElement("section",{className:n},a.a.createElement(xt,null),a.a.createElement(St,null,a.a.createElement(f.d,null,a.a.createElement(f.b,{component:yt,path:"".concat(t,"/:id/stats")}),a.a.createElement(f.b,{component:Qn,path:t}))))};Tt.propTypes={className:u.a.string,match:u.a.shape({url:u.a.string})};var zt=g(Tt)(Nt(),xt,St),Dt=function(){return a.a.createElement(p,null,a.a.createElement(D,null,a.a.createElement(f.b,{exact:!0,path:"/"},a.a.createElement(f.a,{to:"/rooms"})),a.a.createElement(f.b,{component:zt,path:"/rooms"}),a.a.createElement(f.b,{component:Me,path:"/live/:id"})))};Object(c.setConfig)({reloadHooks:!1});var Ct=Object(i.hot)(Dt);Object(o.render)(a.a.createElement(Ct,null),document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,