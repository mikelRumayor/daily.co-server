!function(e){function n(n){for(var r,c,i=n[0],s=n[1],u=n[2],f=0,m=[];f<i.length;f++)c=i[f],Object.prototype.hasOwnProperty.call(a,c)&&a[c]&&m.push(a[c][0]),a[c]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);for(l&&l(n);m.length;)m.shift()();return o.push.apply(o,u||[]),t()}function t(){for(var e,n=0;n<o.length;n++){for(var t=o[n],r=!0,i=1;i<t.length;i++){var s=t[i];0!==a[s]&&(r=!1)}r&&(o.splice(n--,1),e=c(c.s=t[0]))}return e}var r={},a={0:0},o=[];function c(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,c),t.l=!0,t.exports}c.m=e,c.c=r,c.d=function(e,n,t){c.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,n){if(1&n&&(e=c(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(c.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)c.d(t,r,function(n){return e[n]}.bind(null,r));return t},c.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(n,"a",n),n},c.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},c.p="/";var i=window.webpackJsonp=window.webpackJsonp||[],s=i.push.bind(i);i.push=n,i=i.slice();for(var u=0;u<i.length;u++)n(i[u]);var l=s;o.push([698,1]),t()}({445:function(e,n){},447:function(e,n){},479:function(e,n){},480:function(e,n){},522:function(e,n,t){var r={"./af":191,"./af.js":191,"./ar":192,"./ar-dz":193,"./ar-dz.js":193,"./ar-kw":194,"./ar-kw.js":194,"./ar-ly":195,"./ar-ly.js":195,"./ar-ma":196,"./ar-ma.js":196,"./ar-sa":197,"./ar-sa.js":197,"./ar-tn":198,"./ar-tn.js":198,"./ar.js":192,"./az":199,"./az.js":199,"./be":200,"./be.js":200,"./bg":201,"./bg.js":201,"./bm":202,"./bm.js":202,"./bn":203,"./bn.js":203,"./bo":204,"./bo.js":204,"./br":205,"./br.js":205,"./bs":206,"./bs.js":206,"./ca":207,"./ca.js":207,"./cs":208,"./cs.js":208,"./cv":209,"./cv.js":209,"./cy":210,"./cy.js":210,"./da":211,"./da.js":211,"./de":212,"./de-at":213,"./de-at.js":213,"./de-ch":214,"./de-ch.js":214,"./de.js":212,"./dv":215,"./dv.js":215,"./el":216,"./el.js":216,"./en-SG":217,"./en-SG.js":217,"./en-au":218,"./en-au.js":218,"./en-ca":219,"./en-ca.js":219,"./en-gb":220,"./en-gb.js":220,"./en-ie":221,"./en-ie.js":221,"./en-il":222,"./en-il.js":222,"./en-nz":223,"./en-nz.js":223,"./eo":224,"./eo.js":224,"./es":225,"./es-do":226,"./es-do.js":226,"./es-us":227,"./es-us.js":227,"./es.js":225,"./et":228,"./et.js":228,"./eu":229,"./eu.js":229,"./fa":230,"./fa.js":230,"./fi":231,"./fi.js":231,"./fo":232,"./fo.js":232,"./fr":233,"./fr-ca":234,"./fr-ca.js":234,"./fr-ch":235,"./fr-ch.js":235,"./fr.js":233,"./fy":236,"./fy.js":236,"./ga":237,"./ga.js":237,"./gd":238,"./gd.js":238,"./gl":239,"./gl.js":239,"./gom-latn":240,"./gom-latn.js":240,"./gu":241,"./gu.js":241,"./he":242,"./he.js":242,"./hi":243,"./hi.js":243,"./hr":244,"./hr.js":244,"./hu":245,"./hu.js":245,"./hy-am":246,"./hy-am.js":246,"./id":247,"./id.js":247,"./is":248,"./is.js":248,"./it":249,"./it-ch":250,"./it-ch.js":250,"./it.js":249,"./ja":251,"./ja.js":251,"./jv":252,"./jv.js":252,"./ka":253,"./ka.js":253,"./kk":254,"./kk.js":254,"./km":255,"./km.js":255,"./kn":256,"./kn.js":256,"./ko":257,"./ko.js":257,"./ku":258,"./ku.js":258,"./ky":259,"./ky.js":259,"./lb":260,"./lb.js":260,"./lo":261,"./lo.js":261,"./lt":262,"./lt.js":262,"./lv":263,"./lv.js":263,"./me":264,"./me.js":264,"./mi":265,"./mi.js":265,"./mk":266,"./mk.js":266,"./ml":267,"./ml.js":267,"./mn":268,"./mn.js":268,"./mr":269,"./mr.js":269,"./ms":270,"./ms-my":271,"./ms-my.js":271,"./ms.js":270,"./mt":272,"./mt.js":272,"./my":273,"./my.js":273,"./nb":274,"./nb.js":274,"./ne":275,"./ne.js":275,"./nl":276,"./nl-be":277,"./nl-be.js":277,"./nl.js":276,"./nn":278,"./nn.js":278,"./pa-in":279,"./pa-in.js":279,"./pl":280,"./pl.js":280,"./pt":281,"./pt-br":282,"./pt-br.js":282,"./pt.js":281,"./ro":283,"./ro.js":283,"./ru":284,"./ru.js":284,"./sd":285,"./sd.js":285,"./se":286,"./se.js":286,"./si":287,"./si.js":287,"./sk":288,"./sk.js":288,"./sl":289,"./sl.js":289,"./sq":290,"./sq.js":290,"./sr":291,"./sr-cyrl":292,"./sr-cyrl.js":292,"./sr.js":291,"./ss":293,"./ss.js":293,"./sv":294,"./sv.js":294,"./sw":295,"./sw.js":295,"./ta":296,"./ta.js":296,"./te":297,"./te.js":297,"./tet":298,"./tet.js":298,"./tg":299,"./tg.js":299,"./th":300,"./th.js":300,"./tl-ph":301,"./tl-ph.js":301,"./tlh":302,"./tlh.js":302,"./tr":303,"./tr.js":303,"./tzl":304,"./tzl.js":304,"./tzm":305,"./tzm-latn":306,"./tzm-latn.js":306,"./tzm.js":305,"./ug-cn":307,"./ug-cn.js":307,"./uk":308,"./uk.js":308,"./ur":309,"./ur.js":309,"./uz":310,"./uz-latn":311,"./uz-latn.js":311,"./uz.js":310,"./vi":312,"./vi.js":312,"./x-pseudo":313,"./x-pseudo.js":313,"./yo":314,"./yo.js":314,"./zh-cn":315,"./zh-cn.js":315,"./zh-hk":316,"./zh-hk.js":316,"./zh-tw":317,"./zh-tw.js":317};function a(e){var n=o(e);return t(n)}function o(e){if(!t.o(r,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return r[e]}a.keys=function(){return Object.keys(r)},a.resolve=o,e.exports=a,a.id=522},698:function(e,n,t){"use strict";t.r(n);var r=t(1),a=t.n(r),o=t(90),c=t(377),i=t(378),s=t(0),u=t.n(s),l=t(91),f=t(40),m=function(e){var n=e.children;return a.a.createElement(l.a,null,n)};m.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node])};var d=m,p=t(35),v=function(e){return function(n){return n.theme[e]}},g=p.c,j=t(32),h=t.n(j),b=t(3),y=t.n(b);function O(){var e=y()(["\n    font-weight: 600;\n  "]);return O=function(){return e},e}function E(){var e=y()(["\n    font-weight: 500;\n  "]);return E=function(){return e},e}function w(){var e=y()(["\n    font-weight: 400;\n  "]);return w=function(){return e},e}function k(){var e=y()(["\n    font-size: 1.2rem;\n    line-height: 1.6rem;\n  "]);return k=function(){return e},e}function N(){var e=y()(["\n    font-size: 1.4rem;\n    line-height: 2.4rem;\n  "]);return N=function(){return e},e}function x(){var e=y()(["\n    font-size: 1.6rem;\n    line-height: 2.6rem;\n  "]);return x=function(){return e},e}function P(){var e=y()(["\n    font-size: 4rem;\n    line-height: 4.4rem;\n  "]);return P=function(){return e},e}function T(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}var S=function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?T(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):T(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}({},{"--color-light":"#ffffff","--color-main":"#000000","--color-primary":"#1f2d3d","--color-secondary":"#76c720"},{},{"--font-xlarge":Object(p.b)(P()),"--font-large":Object(p.b)(x()),"--font-medium":Object(p.b)(N()),"--font-small":Object(p.b)(k()),"--font-weight-book":Object(p.b)(w()),"--font-weight-medium":Object(p.b)(E()),"--font-weight-demi":Object(p.b)(O())}),z=function(e){var n=e.children;return a.a.createElement(p.a,{theme:S},n)};z.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node])};var D=z;function C(){var e=y()(["\n  ","\n  ","\n  color: ",";\n  text-decoration: none;\n"]);return C=function(){return e},e}var R=g(l.b)(C(),v("--font-small"),v("--font-weight-demi"),v("--color-seconday"));function B(){var e=y()(["\n  ",";\n  align-items: center;\n  background: ",";\n  color: ",";\n  display: flex;\n  height: 6.4rem;\n  padding: 0 3.2rem;\n\n  "," {\n    ",";\n    color: ",";\n  }\n"]);return B=function(){return e},e}function F(){var e=y()([""]);return F=function(){return e},e}var L=g("h1")(F()),_=function(e){var n=e.className;return a.a.createElement("header",{className:n},a.a.createElement(L,{as:R,to:"/"},"Daily.js"))};_.propTypes={className:u.a.string};var M=g(_)(B(),v("--font-large"),v("--color-primary"),v("--color-light"),L,v("--font-xlarge"),v("--color-light"));function I(){var e=y()(["\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n\n  "," {\n    grid-row: 1;\n    grid-column: 1 / span 12;\n  }\n\n  "," {\n    grid-row: 2;\n    grid-column: 1 / span 12;\n    height: 100%;\n    overflow: scroll;\n  }\n"]);return I=function(){return e},e}function A(){var e=y()([""]);return A=function(){return e},e}var U=g("main")(A()),K=function(e){var n=e.className,t=e.children;return a.a.createElement("section",{className:n},a.a.createElement(M,null),a.a.createElement(U,null,t))};K.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]),className:u.a.string};var Y=g(K)(I(),M,U),q=t(13),G=t.n(q),H=t(14),J=t.n(H),W=t(366),Z=t.n(W),$=t(23),Q=t.n($),V=t(367),X=t.n(V);function ee(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function ne(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ee(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ee(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var te="https://daily-co-server.herokuapp.com/";function re(e){return ae.apply(this,arguments)}function ae(){return(ae=Q()(J.a.mark((function e(n){var t,r,a,o,c,i,s=arguments;return J.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=s.length>1&&void 0!==s[1]?s[1]:"get",r=s.length>2?s[2]:void 0,a=s.length>3&&void 0!==s[3]?s[3]:{},o=["delete","patch","post","put"].includes(t.toLowerCase()),e.prev=4,e.next=7,X()(ne((i={},h()(i,o?"data":"params",r),h()(i,"baseURL",te),h()(i,"method",t),h()(i,"url",n),i),a));case 7:c=e.sent,e.next=15;break;case 10:if(e.prev=10,e.t0=e.catch(4),e.t0.response){e.next=14;break}throw new Error("NETWORK");case 14:c=e.t0.response;case 15:return e.abrupt("return",c);case 16:case"end":return e.stop()}}),e,null,[[4,10]])})))).apply(this,arguments)}["get","patch","post","put"].forEach((function(e){re[e]=function(n,t,r){return re(n,e,t,r)}}));var oe=re,ce="MALFORMED_CONTENT",ie="NOT_FOUND",se="UNAUTHORIZED",ue="UNKNOWN";function le(e){return{create:"post",delete:"delete",read:"get",update:"put"}[e]||e}function fe(e,n,t){return me.apply(this,arguments)}function me(){return(me=Q()(J.a.mark((function e(n,t,r){var a,o,c,i,s=arguments;return J.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=s.length>3&&void 0!==s[3]?s[3]:{},e.next=3,oe(n,le(t),r,a);case 3:if(o=e.sent,c=o.data,400!==(i=o.status)){e.next=8;break}throw new Error(c.error&&c.error.message||c.message||ce);case 8:if(401!==i){e.next=10;break}throw new Error(se);case 10:if(404!==i){e.next=12;break}throw new Error(ie);case 12:if(!(i<200||i>=300)||304===i){e.next=14;break}throw new Error(ue);case 14:if("object"!==Z()(c)||!("error"in c)){e.next=16;break}throw new Error(c.error||c.message);case 16:return e.abrupt("return",c);case 17:case"end":return e.stop()}}),e)})))).apply(this,arguments)}Object.values({create:"create",delete:"delete",read:"read",update:"update"}).forEach((function(e){fe[e]=function(n,t,r){return fe(n,e,t,r)}}));var de=fe;var pe={createToken:function(e){return de.create("/meetings",e)},validateToken:function(e){return de.read("/meetings/".concat(e))}},ve=t(701),ge=t(368),je=t.n(ge);var he=function(e){var n=Object(r.useRef)();return je()(e,n.current)||(n.current=e),n.current};var be=function(e,n){return Object(r.useEffect)(e,he(n))};function ye(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function Oe(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?ye(Object(t),!0).forEach((function(n){h()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ye(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var Ee=1,we=2,ke=4;function Ne(e,n){switch(n.type){case Ee:return Oe({},e,{data:void 0,error:void 0,loading:!0,promise:void 0});case we:return Oe({},e,{error:void 0,loading:!0,promise:n.promise});case ke:return Oe({},e,{data:n.data,error:n.error,loading:!1,promise:void 0});default:return e}}var xe=Ne({},{type:Ee}),Pe=function(e,n){var t=Object(r.useReducer)(Ne,xe),a=G()(t,2),o=a[0],c=a[1],i=Object(r.useState)((function(){return Object(ve.a)()})),s=G()(i,2),u=s[0],l=s[1],f=Object(r.useCallback)((function(){l(Object(ve.a)())}),[l]);return be((function(){var t=!0,r={};return Q()(J.a.mark((function a(){var o;return J.a.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:return a.prev=0,r=e(n),c({promise:r,type:we}),a.next=5,r;case 5:o=a.sent,t&&c({data:o,type:ke}),a.next=12;break;case 9:a.prev=9,a.t0=a.catch(0),t&&c({error:a.t0,type:ke});case 12:case"end":return a.stop()}}),a,null,[[0,9]])})))(),function(){t=!1,"function"==typeof r.cancel?r.cancel():"function"==typeof e.cancel&&e.cancel()}}),[u,n,e]),[o,f]},Te=function(){var e=new URLSearchParams(Object(f.g)().search).get("token"),n=Pe(pe.validateToken,e),t=G()(n,1)[0],r=t.data,a=(r=void 0===r?{}:r).valid;return!(!t.loading&&!a)&&e};var Se=function(){var e=Pe.apply(void 0,arguments),n=G()(e,1),t=n[0];return t.data};function ze(){var e=y()(["\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n"]);return ze=function(){return e},e}var De=function(e){var n=e.className;return a.a.createElement("aside",{className:n},a.a.createElement("img",{alt:"loader",src:"http://help.presentations2go.eu/LTI/lib/Spinner.gif"}))};De.propTypes={className:u.a.string};var Ce=g(De)(ze()),Re=t(24),Be=t.n(Re),Fe=t(18),Le=t.n(Fe),_e=t(369).a;function Me(){var e=y()(["\n  border: 0;\n  height: 100%;\n  width: 100%;\n"]);return Me=function(){return e},e}var Ie=function(e){var n=e.className,t=e.onLoad,o=void 0===t?function(){}:t,c=e.url,i=Object(r.useRef)();return Object(r.useEffect)((function(){var e=_e.wrap(i.current,{});e.join({url:c}),o(e)}),[i,c,o]),a.a.createElement("iframe",{ref:i,allow:"microphone; camera; autoplay",className:n,title:"live video"})};Ie.propTypes={className:u.a.string,onLoad:u.a.func,url:u.a.string};var Ae=g(Ie)(Me());var Ue={get:function(e){return de.read("/stats/".concat(e))},send:function(e,n,t){return de.create("/stats/".concat(e,"/").concat(n),t)}},Ke=function(e){var n=e.id,t=Le()(e,["id"]),o=Object(r.useState)(),c=G()(o,2),i=c[0],s=c[1],u=Object(r.useRef)(),l=Object(r.useCallback)((function(e){s(e)}),[s]);return be((function(){var e;return i&&i.on("joined-meeting",(function(e){var n=e.participants;if(!u.current){var t=Object.keys(n);u.current=t[t.length-1]}})).on("network-connection",(function(t){t.session_id&&(e=setInterval(Q()(J.a.mark((function e(){var t,r,a;return J.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.getNetworkStats();case 2:t=e.sent,r=t.stats,a=(r=void 0===r?{}:r).latest,Ue.send(n,u.current,a);case 7:case"end":return e.stop()}}),e)}))),1e3))})).on("participant-left",(function(){clearInterval(e)})),function(){return clearInterval(e)}}),[n,i,u]),a.a.createElement(Ae,Be()({},t,{onLoad:l}))};Ke.propTypes={id:u.a.string};var Ye=Ke;function qe(){var e=y()(["\n  ",";\n"]);return qe=function(){return e},e}var Ge=function(e){var n=e.className;return a.a.createElement("span",{className:n},"You are not authorized to take this call")};Ge.propTypes={className:u.a.string};var He=g(Ge)(qe(),v("--font-xlarge"));var Je={create:function(e){return de.create("/rooms",e)},get:function(){return de.read("/rooms")},getById:function(e){return de.read("/rooms/".concat(e))},getToken:function(){return de.read("/rooms")}};function We(){var e=y()([""]);return We=function(){return e},e}var Ze=function(e){var n=e.className,t=e.match.params.id,r=Se(Je.getById,t),o=Te();if(!r)return a.a.createElement(Ce,null);var c=r.url,i=r.privacy;return o||"private"!==i?a.a.createElement(Ye,{className:n,id:t,url:o?c:"".concat(c,"?t=").concat(o)}):a.a.createElement(He,null)};Ze.propTypes={className:u.a.string,match:u.a.shape({params:u.a.shape({id:u.a.string})})};var $e=g(Ze)(We());function Qe(){var e=y()(["\n  ","\n  ","\n  background-color: ",";\n  border-radius: 1.6rem;\n  color: ",";\n  min-width: 6rem;\n  padding: 0.8rem 1.2rem;\n  text-transform: capitalize;\n\n  &:active {\n    color: ",";\n    background-color: ",";\n  }\n\n  &[disabled] {\n    color: ",";\n    background-color: ",";\n  }\n"]);return Qe=function(){return e},e}var Ve=g("button")(Qe(),v("--font-small"),v("--font-weight-demi"),v("--color-secondary"),v("--color-light"),v("--color-light"),v("--color-primary"),v("--color-light"),v("--color-primary"));function Xe(){var e=y()([""]);return Xe=function(){return e},e}var en=function(e){var n=e.className,t=e.children,r=e.fields,o=e.to,c=Le()(e,["className","children","fields","to"]),i=Se(pe.createToken,r);return a.a.createElement(R,Be()({},c,{className:n,to:"".concat(o,"?token=").concat(i)}),t)};en.propTypes={children:u.a.oneOfType([u.a.arrayOf(u.a.node),u.a.node]),className:u.a.string,fields:u.a.object,to:u.a.string};var nn=g(en)(Xe());function tn(){var e=y()(["\n  box-shadow: 0 0.1rem 0.3rem 0 rgba(0, 0, 0, 0.15);\n  border-radius: 0.5rem;\n  display: grid;\n  padding: 1.6rem 3.2rem;\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 1.6rem 0.8rem;\n\n  "," {\n    grid-row: 1;\n    grid-column: 1 / span 3;\n    ",";\n  }\n\n  "," {\n    ",";\n    grid-row: 1;\n    grid-column: 4 / span 3;\n  }\n\n  "," {\n    ",";\n    background: ",";\n    border-radius: 1.6rem;\n    color: ",";\n    grid-row: 2;\n    grid-column: 1;\n    max-width: 8rem;\n    text-align: center;\n    text-transform: capitalize;\n\n    &[data-private='true'] {\n      background: ",";\n    }\n  }\n\n  "," {\n    ",";\n    grid-row: 3;\n    text-transform: capitalize;\n  }\n"]);return tn=function(){return e},e}function rn(){var e=y()([""]);return rn=function(){return e},e}function an(){var e=y()([""]);return an=function(){return e},e}function on(){var e=y()([""]);return on=function(){return e},e}var cn=g("span")(on()),sn=g("span")(an()),un=g("span")(rn()),ln=function(e){var n=e.className,t=e.created_at,r=e.id,o=e.name,c=e.privacy;return a.a.createElement("div",{className:n},a.a.createElement(sn,null,o),a.a.createElement(cn,null,"Created in: ",new window.Date(t).toDateString()),a.a.createElement(un,{"data-private":"private"===c},c),a.a.createElement(R,{to:"/rooms/".concat(r)},"go to stats"),"public"===c?a.a.createElement(R,{target:"blank",to:"/live/".concat(r)},"go to call"):a.a.createElement(nn,{fields:{name:o},target:"blank",to:"/live/".concat(r)},"go to call"))};ln.propTypes={className:u.a.string,created_at:u.a.string,id:u.a.string,name:u.a.string,privacy:u.a.string};var fn=g(ln)(tn(),sn,v("--font-large"),cn,v("--font-medium"),un,v("--font-medium"),v("--color-secondary"),v("--color-light"),v("--color-alert"),R,v("--font-medium"));function mn(){var e=y()([""]);return mn=function(){return e},e}var dn=function(e){var n=e.className,t=e.data,r=void 0===t?[]:t,o=e.template;return a.a.createElement("div",{className:n},r.map((function(e){return a.a.createElement(o,Be()({key:e.id},e))})))};dn.propTypes={className:u.a.string,data:u.a.arrayOf(u.a.object),template:u.a.node};var pn=g(dn)(mn()),vn=t(54),gn=t.n(vn);function jn(){var e=y()(["\n  ","\n  display: flex;\n\n  "," {\n    margin-right: 0.8rem;\n    text-transform: capitalize;\n  }\n\n  "," {\n    border-radius: 0.4rem;\n    padding: 0.4rem 0.8rem;\n    text-transform: capitalize;\n  }\n"]);return jn=function(){return e},e}function hn(){var e=y()([""]);return hn=function(){return e},e}function bn(){var e=y()([""]);return bn=function(){return e},e}var yn=g("label")(bn()),On=g("select")(hn()),En=function(e){var n=e.className,t=e.options,o=void 0===t?[]:t,c=Le()(e,["className","options"]),i=Object(vn.useField)(c),s=i.id,u=void 0===s?Object(ve.a)():s,l=i.label,f=i.name,m=i.onBlur,d=void 0===m?function(){}:m,p=i.onChange,v=void 0===p?function(){}:p,g=i.onFocus,j=void 0===g?function(){}:g,h=i.value,b=Le()(i,["id","label","name","onBlur","onChange","onFocus","value"]);return Object(r.useEffect)((function(){if(void 0===h){var e=o[0]||{};v(e)}}),[v,o,h]),a.a.createElement("div",{className:n},a.a.createElement(yn,{htmlFor:u},l),a.a.createElement(On,Be()({},b,{name:f,onBlur:function(){d()},onChange:function(e){var n=e.target.value;e.stopPropagation();var t=o.find((function(e){return e===n}))||o[0];v(t)},onFocus:function(){j()}}),o.map((function(e){return a.a.createElement("option",{value:e},e)}))))};En.propTypes={className:u.a.string,id:u.a.string,label:u.a.string,options:u.a.arrayOf(u.a.string)};var wn=g(En)(jn(),v("--font-medium"),yn,On);function kn(){var e=y()(["\n  ","\n  height: 5.2rem;\n\n  "," {\n    display: flex;\n  }\n\n  "," {\n    margin-right: 0.8rem;\n    text-transform: capitalize;\n  }\n\n  "," {\n    border-radius: 0.4rem;\n    padding: 0.4rem 0.8rem;\n  }\n\n  "," {\n    color: red;\n  }\n"]);return kn=function(){return e},e}function Nn(){var e=y()([""]);return Nn=function(){return e},e}function xn(){var e=y()([""]);return xn=function(){return e},e}function Pn(){var e=y()([""]);return Pn=function(){return e},e}function Tn(){var e=y()([""]);return Tn=function(){return e},e}var Sn=g("label")(Tn()),zn=g("input")(Pn()),Dn=g("span")(xn()),Cn=g("div")(Nn()),Rn=function(e){var n=e.className,t=Le()(e,["className"]),r=Object(vn.useField)(t),o=r.error,c=r.id,i=void 0===c?Object(ve.a)():c,s=r.label,u=r.name,l=r.onBlur,f=void 0===l?function(){}:l,m=r.onChange,d=void 0===m?function(){}:m,p=r.onFocus,v=void 0===p?function(){}:p,g=Le()(r,["error","id","label","name","onBlur","onChange","onFocus"]);return a.a.createElement("div",{className:n},a.a.createElement(Cn,null,a.a.createElement(Sn,{htmlFor:i},s),a.a.createElement(zn,Be()({},g,{name:u,onBlur:function(){f()},onChange:function(e){var n=e.target.value;e.stopPropagation(),d(n)},onFocus:function(){v()}}))),o&&a.a.createElement(Dn,null,o))};function Bn(){var e=y()([""]);return Bn=function(){return e},e}Rn.propTypes={className:u.a.string,id:u.a.string,label:u.a.string};var Fn={select:wn,text:g(Rn)(kn(),v("--font-medium"),Cn,Sn,zn,Dn)},Ln=function(e){var n=e.type,t=void 0===n?"text":n,r=Le()(e,["type"]),o=Fn[t];return a.a.createElement(o,r)};Ln.propTypes={type:u.a.string};var _n=g(Ln)(Bn());function Mn(){var e=y()([""]);return Mn=function(){return e},e}var In=g(gn.a)(Mn());function An(){var e=y()(["\n  "," {\n    margin: 3.2rem 0;\n\n    "," {\n      margin: 1.2rem 0;\n    }\n  }\n"]);return An=function(){return e},e}function Un(){var e=y()([""]);return Un=function(){return e},e}function Kn(){var e=y()([""]);return Kn=function(){return e},e}var Yn=g("div")(Kn()),qn=g("h2")(Un()),Gn="https://daily-co-server.herokuapp.com/",Hn=function(e){var n=e.className,t=e.onSubmit,o=void 0===t?function(){}:t,c=Object(r.useMemo)((function(){return{name:{format:{message:"Spaces are not allowed",pattern:/^\S*$/}}}}),[]),i=function(){var e=Q()(J.a.mark((function e(n){var t,r,a;return J.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Je.create(n);case 2:if(t=e.sent,r=t.id,"private"!==t.privacy){e.next=12;break}return e.next=8,pe.createToken(n);case 8:a=e.sent,o("".concat(Gn,"/live/").concat(r,"?token=").concat(a)),e.next=13;break;case 12:o("".concat(Gn,"/live/").concat(r));case 13:case"end":return e.stop()}}),e)})));return function(n){return e.apply(this,arguments)}}();return a.a.createElement(In,{className:n,constraint:c,onSubmit:i},a.a.createElement(qn,null,"Create a room"),a.a.createElement(Yn,null,a.a.createElement(_n,{label:"room name",name:"name"}),a.a.createElement(_n,{label:"privacy",name:"privacy",options:["public","private"],type:"select"})),a.a.createElement(Ve,{type:"submit"},"create"))};Hn.propTypes={className:u.a.string,onSubmit:u.a.func};var Jn=g(Hn)(An(),Yn,_n);function Wn(){var e=y()(["\n  display: flex;\n  justify-content: center;\n  padding: 1.6rem;\n  position: fixed;\n  width: 100%;\n  height: 100%;\n\n  "," {\n    background: rgba(0, 0, 0, 0.3);\n    position: fixed;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    top: 0;\n  }\n\n  ",", "," {\n    background: white;\n    border-radius: 0.5rem;\n    margin: 18vh auto 0;\n    padding: 1.6rem;\n    position: relative;\n    z-index: 1;\n  }\n\n  "," {\n    height: 23rem;\n    width: 35rem;\n  }\n\n  "," {\n    height: 10rem;\n    width: 40rem;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    "," {\n      display: inline-block;\n      ","\n      width: 28rem;\n    }\n  }\n"]);return Wn=function(){return e},e}function Zn(){var e=y()([""]);return Zn=function(){return e},e}function $n(){var e=y()([""]);return $n=function(){return e},e}function Qn(){var e=y()([""]);return Qn=function(){return e},e}var Vn=g("input")(Qn()),Xn=g("aside")($n()),et=g("div")(Zn()),nt=function(e){var n=e.className,t=e.onRefetch,o=Object(r.useRef)(),c=Object(r.useState)(),i=G()(c,2),s=i[0],u=i[1],l=Object(r.useState)(!1),m=G()(l,2),d=m[0],p=m[1],v=Object(r.useCallback)((function(e){t(),u(e)}),[t]),g=function(){var e=Q()(J.a.mark((function e(){return J.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:o.current.select(),document.execCommand("copy");case 2:case"end":return e.stop()}}),e)})));return function(){return e.apply(this,arguments)}}();return a.a.createElement("div",{className:n},d&&a.a.createElement(f.a,{to:"/rooms"}),a.a.createElement(Xn,{onClick:function(){p(!0)}}),s?a.a.createElement(et,null,a.a.createElement(Vn,{ref:o,label:"room url",value:s}),a.a.createElement(Ve,{onClick:g},"copy")):a.a.createElement(Jn,{onSubmit:v}))};nt.propTypes={className:u.a.string,onRefetch:u.a.func};var tt=g(nt)(Wn(),Xn,Jn,et,Jn,et,Vn,v("--font-large")),rt=t(2),at=t.n(rt),ot=t(42);function ct(){var e=y()(["\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n\n  "," {\n    margin-bottom: 2.4rem;\n  }\n"]);return ct=function(){return e},e}function it(){var e=y()([""]);return it=function(){return e},e}var st=g("h3")(it()),ut=function(e){return at()(e).format("MMM Do YY hh:mm:ss")},lt=["red","green"],ft=function(e){var n=e.className,t=e.data,r=e.height,o=void 0===r?300:r,c=e.width,i=void 0===c?600:c,s=e.title,u=e.yAxis,l=t[0]||{},f=(l.time,Le()(l,["time"])),m=Object.keys(f);return a.a.createElement("div",{className:n},a.a.createElement(st,null,s),a.a.createElement(ot.e,{data:t,height:o,width:i},m.map((function(e,n){return a.a.createElement(ot.d,{key:e,dataKey:e,stroke:lt[n],type:"monotone"})})),a.a.createElement(ot.a,{stroke:"#ccc"}),a.a.createElement(ot.f,{dataKey:"time",tickFormatter:ut}),a.a.createElement(ot.g,null,a.a.createElement(ot.b,{angle:-90,position:"insideLeft",style:{textAnchor:"middle"},value:u})),a.a.createElement(ot.c,{height:36,verticalAlign:"bottom"})))};ft.propTypes={className:u.a.string,data:u.a.arrayOf(u.a.object),height:u.a.number,title:u.a.string,width:u.a.number,yAxis:u.a.string};var mt=g(ft)(ct(),st);function dt(){var e=y()(["\n  "," {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n"]);return dt=function(){return e},e}function pt(){var e=y()([""]);return pt=function(){return e},e}function vt(){var e=y()([""]);return vt=function(){return e},e}var gt=g("div")(vt()),jt=g("h3")(pt()),ht=function(e){var n=e.className,t=e.bitsPerSecond,r=e.id,o=e.lostPackets;return a.a.createElement("div",{className:n},a.a.createElement(jt,null,"Paticipant id: ",r),a.a.createElement(gt,null,a.a.createElement(mt,{data:t,title:"Bits per second",yAxis:"bits per second"}),a.a.createElement(mt,{data:o,title:"Packets transmision",yAxis:"packets lost"})))};ht.propTypes={bitsPerSecond:u.a.arrayOf(u.a.object),className:u.a.string,id:u.a.string,lostPackets:u.a.arrayOf(u.a.object)};var bt=g(ht)(dt(),gt);function yt(){var e=y()([""]);return yt=function(){return e},e}var Ot=function(e){var n=e.className,t=e.id,r=Pe(Ue.get,t),o=G()(r,1)[0],c=o.data;return o.loading?a.a.createElement(Ce,null):a.a.createElement("div",{className:n},Object.keys(c).map((function(e){var n=c[e].map((function(e){return{time:e.time,videoRecvBitsPerSecond:e.videoRecvBitsPerSecond,videoSendBitsPerSecond:e.videoSendBitsPerSecond}})),t=c[e].map((function(e){return{time:e.time,videoRecvPacketLoss:e.videoRecvPacketLoss,videoSendPacketLoss:e.videoSendPacketLoss}}));return a.a.createElement(bt,{key:e,bitsPerSecond:n,id:e,lostPackets:t})})))};Ot.propTypes={className:u.a.string,id:u.a.string};var Et=g(Ot)(yt());function wt(){var e=y()(["\n  height: 100%;\n\n  "," {\n    margin-bottom: 6.4rem;\n  }\n"]);return wt=function(){return e},e}var kt=function(e){var n=e.className,t=e.match.params.id,r=Pe(Je.getById,t),o=G()(r,1)[0],c=o.data;return o.loading?a.a.createElement(Ce,null):a.a.createElement("div",{className:n},a.a.createElement(fn,c),a.a.createElement(Et,{id:t}))};kt.propTypes={className:u.a.string,match:u.a.shape({params:u.a.shape({id:u.a.string})})};var Nt=g(kt)(wt(),fn);function xt(){var e=y()(["\n  height: 100%;\n  padding: 3.2rem;\n\n  "," {\n    text-align: right;\n  }\n\n  "," {\n    margin-top: 1.6rem;\n    max-height: calc(100vh - 12.6rem);\n    overflow: scroll;\n\n    "," {\n      margin-bottom: 2.4rem;\n    }\n  }\n"]);return xt=function(){return e},e}function Pt(){var e=y()([""]);return Pt=function(){return e},e}var Tt=g("aside")(Pt()),St=function(e){var n=e.className,t=e.match.url,r=Pe(Je.get),o=G()(r,2),c=o[0],i=c.data,s=void 0===i?[]:i,u=c.loading,l=o[1];return a.a.createElement("div",{className:n},a.a.createElement(f.d,null,a.a.createElement(f.b,{path:"".concat(t,"/create"),render:function(e){return a.a.createElement(tt,Be()({},e,{onRefetch:l}))}}),a.a.createElement(f.b,{component:Nt,path:"".concat(t,"/:id")})),a.a.createElement(Tt,null,a.a.createElement(Ve,{as:R,to:"".concat(t,"/create")},"Create room")),u?a.a.createElement(Ce,null):a.a.createElement(pn,{data:s,template:fn}))};St.propTypes={className:u.a.string,match:u.a.shape({url:u.a.string})};var zt=g(St)(xt(),Tt,pn,fn),Dt=function(){return a.a.createElement(d,null,a.a.createElement(D,null,a.a.createElement(f.b,{exact:!0,path:"/"},a.a.createElement(f.a,{to:"/rooms"})),a.a.createElement(f.b,{path:"/rooms",render:function(e){return a.a.createElement(Y,null,a.a.createElement(zt,e))}}),a.a.createElement(f.b,{component:$e,path:"/live/:id"})))};Object(c.setConfig)({reloadHooks:!1});var Ct=Object(i.hot)(Dt);Object(o.render)(a.a.createElement(Ct,null),document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,